." Text automatically generated by txt2man
.TH "point" "3m_draw" "February 11, 2022" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
\fBpoint\fP(3f) - [M_draw:POINT] Draw a point at x, y, z
(LICENSE:PD)
.SH SYNOPSIS
subroutine \fBpoint\fP(\fIx\fP, \fIy\fP, \fIz\fP)
\fBreal,intent\fP(\fIin\fP) :: \fIx\fP, \fIy\fP, \fIz\fP
.fam T
.fi
.SH DESCRIPTION
Draw a point at \fIx\fP, \fIy\fP, \fIz\fP. The size of the point is not affected by
perspective. Draw a polygon if you want perspective to be applied.
The size of the point is controlled by the current linewidth.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_point
   use M_draw
   use M_draw,    only  : D_BLACK,   D_WHITE
   use M_draw,    only  : D_RED,     D_GREEN,    D_BLUE
   use M_draw,    only  : D_YELLOW,  D_MAGENTA,  D_CYAN
   implicit none
   integer :: i
   integer :: ikey
      call prefsize(1000,200)
      call vinit(' ')
      call color(D_BLACK)
      call clear()
      call page(-25.0, 25.0, -5.0, 5.0)

      ! draw points using various linewidths and colors
      do i=1,300
         call randpoint()
      enddo

      ikey=getkey()
      call vexit()

   contains
      subroutine randpoint()
         real :: r1, r2
         call random_number(r1)
         call random_number(r2)
         call linewidth(int(r1*500+200))
         call color(nint(r2*7))
         call point(r1*50.0-25.0,r2*10.0-5.0,0.0)
      end subroutine randpoint

   end program demo_point

