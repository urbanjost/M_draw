." Text automatically generated by txt2man
.TH "textang" "3m_draw" "February 11, 2022" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
\fBtextang\fP(3f) - [M_draw:TEXT] Set the SOFTWARE text angle.
(LICENSE:PD)
.SH SYNOPSIS
subroutine \fBtextang\fP(\fIang\fP)
\fBreal,intent\fP(\fIin\fP) :: \fIang\fP
.fam T
.fi
.SH DESCRIPTION
Set the text angle. This angles strings and chars. This routine only
affects software text. Angle is \fIin\fP degrees
.SH OPTIONS
.TP
.B ANG
The angle \fIin\fP degrees to draw text with when using \fBdrawstr\fP(3f).
Angles are measured counterclockwise with zero degrees at the horizontal
line to the right of the original.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_textang
   use :: M_draw
   use :: M_units, only : cosd, sind
   integer :: ipaws

   !! set up drawing environment
   call prefsize(600,600)
   call vinit(' ') ! start graphics using device $M_DRAW_DEVICE
   call ortho2(-100.0,100.0,-100.0,100.0)
   call textsize(7.0,7.0)
   call linewidth(20)
   call color(D_BLACK)
   call clear()

   do i=1,30
      !! draw radial lines
      call color(D_RED)
      call move2(0.0,0.0)
      call draw2(100.0*cosd(i*12),100.0*sind(i*12))
      !! draw rotated text
      call color(D_WHITE)
      call move2(30.0*cosd(i*12),30.0*sind(i*12))
      call textang(i*12.0)
      call drawstr('angled text')
   enddo

   ipaws=getkey()

   call vexit()

   end program demo_textang

