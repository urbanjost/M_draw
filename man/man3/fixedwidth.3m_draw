." Text automatically generated by txt2man
.TH "fixedwidth" "3m_draw" "April 12, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
fixedwidth(3f) - [M_draw:TEXT] Turns fixedwidth mode on or off for SOFTWARE fonts.
(LICENSE:PD)
.SH SYNOPSIS
subroutine fixedwidth(onoff)
logical onoff
.fam T
.fi
.SH DESCRIPTION

Turns fixedwidth text on or off. .TRUE. causes all text to
be printed with a fixed width for each character. Otherwise, the text
is spaced proportionally, where each character has a unique width less
than or equal to the current fixed font width. This routine only affects
software text.
.PP
The default at program initialization is fixedwidth(.false.)
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_fixedwidth
      use M_draw
      implicit none
      real,parameter :: x1=0.0,  x2=40.0,  y1=0.0,  y2=4.0
      real,parameter :: scl=3*0.7
      integer :: idum
   ! set up display
      call prefsize(1000,100)
      call vinit(' ')
      call page(x1,x2,y1,y2)
   ! set font appearance
      call linewidth(200)
      call font("times.rb")
   ! draw a string using proportional and fixed spacing
      call move2(x1+0.3,y1+0.4)
      call textsize(0.8*scl,1.2*scl)
      call color(1)
      call fixedwidth(.false.)
      call drawstr("fixedwidth(.false.)")
      call textsize(0.6*scl,1.2*scl)
      call color(2)
      call fixedwidth(.true.)
      call drawstr(" fixedwidth(.true.)")
   ! wrap up
      idum=getkey()
      call vexit()
   end program demo_fixedwidth
