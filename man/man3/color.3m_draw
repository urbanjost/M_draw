." Text automatically generated by txt2man
.TH "color" "3m_draw" "April 12, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
color(3f) - [M_draw:COLOR] Set current color
(LICENSE:PD)

.SH SYNOPSIS
subroutine color(col)
integer,intent(in) :: col
.fam T
.fi
.SH DESCRIPTION

Set the current color. The standard colors are as follows:
.PP
.nf
.fam C
      d_black  =  0  d_red      =  1  d_green  =  2  d_yellow  =  3
      d_blue   =  4  d_magenta  =  5  d_cyan   =  6  d_white   =  7

.fam T
.fi
.SH OPTION
.TP
.B COL
A color number from 0 to 255. To define additional
colors see mapcolor(3f).
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
    program demo_color
    use M_draw
.fam T
.fi
implicit none
.RS
.TP
.B real
:: b=0.5
.TP
.B real
:: y1,y2,ym,x1,x2
.TP
.B real
:: width=50.0/8.0,width2
integer :: i
integer :: ipaws
!! set up long bar as plotting area
call prefsize(1000,200)
call vinit(' ') ! start graphics using device $M_DRAW_DEVICE
call page(\fB-25.0-b\fP, 25.0+b, \fB-5.0-b\fP, 5.0+b)
call textsize( 3.5, 4.0)
call font('futura.m')
call centertext(.true.)
call linewidth(90)
y1=\fB-5\fP
y2=5
ym=0
x1=\fB-25\fP+.05*width
! draw colored rectangle and a circle and label center of circle
! and repeat from colors 0 to 7.
width2=width*0.95
call linewidth(40)
do i=0,7
call color(i)
x2=x1+width2
call polyfill(.true.)
call makepoly()
call rect(x1,y1,x2,y2)
call closepoly()
call color(mod(i+1,7)+1)
call move2((x1+x2)/2.0,ym)
.RS
.TP
.B call print(i)
! convert number to string and draw it
call polyfill(.false.)
call circle((x1+x2)/2.0, ym, (x2-x1)/2.10)
x1=x1+width
enddo
ipaws=getkey()
call vexit()
end program demo_color
