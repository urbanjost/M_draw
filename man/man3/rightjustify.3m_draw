." Text automatically generated by txt2man
.TH "rightjustify" "3m_draw" "April 17, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
rightjustify(3f) - [M_draw:TEXT] right justify text
(LICENSE:PD)

.SH SYNOPSIS
subroutine rightjustify()
.fam T
.fi
.SH DESCRIPTION

Right justifies text. The text string will begin at a point to the
notional left of the current position and finish at the current
position. Left justification and X centering are turned off.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_rightjustify
   use M_draw
   use M_draw,    only  : D_BLACK,   D_WHITE
   use M_draw,    only  : D_RED,     D_GREEN,    D_BLUE
   use M_draw,    only  : D_YELLOW,  D_MAGENTA,  D_CYAN
   implicit none
   real    :: x1, x2, y1, y2
   real    :: scl, ax, bx
   integer :: key
      call prefsize(1200,120)
      call vinit(' ')
      x1=0; x2=40; y1=0; y2=4; scl=1.9
      call page(x1,x2,y1,y2)
      call textsize(0.9*scl,1.4*scl)
      call font("times.rb")
      call linewidth(200)
      AX=(x1+x2)/2+6; BX=y1+1.3
      call move2(AX,BX)
      call rightjustify()
      call color(D_GREEN)
      call drawstr("rightjustify()")
      call color(D_RED)
      call move2(AX-1.0,BX)
      call draw2(AX+1.0,BX)
      call move2(AX,BX-1.0)
      call draw2(AX,BX+1.0)
      call vflush()
      key=getkey()
      call vexit()
   end program demo_rightjustify

