." Text automatically generated by txt2man
.TH "textsize" "3m_draw" "April 17, 2023" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." set smaller margin and spacing options
.ta T 0.2i
.nr IN 0.2i
." -----------------------------------------------------------------
.SH NAME
textsize(3f) - [M_draw:TEXT] Set text size of a character in the current SOFTWARE font in world units.
(LICENSE:PD)
.SH SYNOPSIS
subroutine textsize(width, height)
real,intent(in) :: width
real,intent(in) :: height
.fam T
.fi
.SH DESCRIPTION

Set the maximum size of a character in the current font. Width and height
are values in world units. This applies to software text, but may not apply
to hardware fonts depending upon the output device. This must
be done after the font being scaled is loaded. To keep text of different
sizes aligned along the same baseline not that you typically need to
subtract the descender height from the Y position
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_textsize
   use M_draw
   implicit none
   integer :: i,ii
   integer :: ipaws
      !! set up long bar as plotting area
      call prefsize(900,150)
      call vinit(' ') ! start graphics using device $M_DRAW_DEVICE
      call ortho2(-30.0, 30.0, -5.0, 5.0)
      call font('times.r')

      call move2(-23.0,-4.5)
      call color(D_WHITE)
      call textsize(2.0,2.0)
      call move2(-27.5,-3.0)
      call draw2( 27.5,-3.0)
      call move2(-27.5,-3.0)

      do i=1,7
         ii=nint((i*20)*0.30)
         call linewidth(nint(ii*2.35))
         call textsize(real(i),real(i))
         call color(D_MAGENTA)
         call drawstr('aA')
      enddo

      ipaws=getkey()

      call vexit()

   end program demo_textsize

